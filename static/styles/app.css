* {
margin: 0;
padding: 0;
box-sizing: border-box;
}

html, body {
height: 100%;
}

body {
font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
font-size: 0.8rem;
}

.wrapper {
height: 100%;
display: flex;
flex-direction: column;
}

h1, h2 {
font-size: 2rem;
text-align: center;
font-weight: normal;
padding: 0.5rem 0 0 0;
}

.main-controls {
padding: 0.5rem 0;
}

canvas {
display: block;
margin-bottom: 0.5rem;
}

#buttons {
display: flex;
flex-direction: row;
justify-content: space-between;
}

#buttons button {
font-size: 1rem;
padding: 1rem;
width: calc(50% - 0.25rem);
}

button {
font-size: 1rem;
background: #0088cc;
text-align: center;
color: white;
border: none;
transition: all 0.2s;
padding: 0.5rem;
}

button:hover, button:focus {
box-shadow: inset 0px 0px 10px rgba(255, 255, 255, 1);
background: #0ae;
}

button:active {
box-shadow: inset 0px 0px 20px rgba(0,0,0,0.5);
transform: translateY(2px);
}


/* Make the clips use as much space as possible, and
* also show a scrollbar when there are too many clips to show
* in the available space */
.sound-clips {
flex: 1;
overflow: auto;
}

section, article {
display: block;
}

.clip {
padding-bottom: 1rem;
}

audio {
width: 100%;
display: block;
margin: 1rem auto 0.5rem;
}

.clip p {
display: inline-block;
font-size: 1rem;
}

.clip button {
font-size: 1rem;
float: right;
}

button.delete {
background: #f00;
padding: 0.5rem 0.75rem;
font-size: 0.8rem;
}

/* Checkbox hack to control information box display */

label {
font-size: 3rem;
position: absolute;
top: 2px;
right: 3px;
z-index: 5;
cursor: pointer;
background-color: black;
border-radius: 10px;
}

input[type=checkbox] {
    position: absolute;
    top: -100px;
}
/* Toggled State of information box */
input[type=checkbox]:checked ~ aside {
transform: translateX(0);
}

/* Cursor when clip name is clicked over */

.clip p {
cursor: pointer;
}

/* Adjustments for wider screens */
@media all and (min-width: 800px) {
/* Don't take all the space as readability is lost when line length
    goes past a certain size */
.wrapper {
    width: 90%;
    max-width: 1000px;
    margin: 0 auto;
}
}
.lds-hourglass {
    margin: 0;
    position: absolute;
    top: 55%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}
.lds-hourglass:after {
  content: " ";
  display: block;
  border-radius: 50%;
  width: 0;
  height: 0;
  margin: 8px;
  box-sizing: border-box;
  border: 32px solid rgb(255, 0, 0);
  border-color: rgb(233, 35, 35) transparent rgb(255, 0, 0) transparent;
  animation: lds-hourglass 1.2s infinite;
}
.lds-hourglass.hidden{
    display: none;
}
@keyframes lds-hourglass {
  0% {
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  50% {
    transform: rotate(900deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: rotate(1800deg);
  }
}
.result{
    margin: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}
.text{
    text-align: center;
}